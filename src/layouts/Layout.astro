---
import "../styles/global.css";
import "../styles/transitions.css";
import { ClientRouter } from "astro:transitions";

export interface Props {
  title: string;
  description?: string;
}

const {
  title = "PNW Digital Solutions - Open Source Development & Consulting",
  description = "Empowering businesses through open source software solutions. Expert web development, consulting, and community-driven innovation for modern enterprises.",
} = Astro.props;
---

<!doctype html>
<html
  lang="en"
  x-data="{ darkMode: localStorage.getItem('darkMode') === 'true' }"
  x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))"
  :class="{ 'dark': darkMode }"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta
      name="keywords"
      content="open source, web development, JavaScript, TypeScript, React, Vue, Astro, consulting, software development, community"
    />
    <meta name="author" content="Z Sullivan" />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png" />
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png" />
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png" />
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png" />
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png" />
    <link rel="icon" type="image/png" sizes="192x192" href="/android-icon-192x192.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="msapplication-TileImage" content="/ms-icon-144x144.png" />


    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content="PNW Digital Solutions" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content="favicon.svg" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />

    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Lexend:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <ClientRouter />
  </head>
  <body
    class="antialiased bg-white dark:bg-secondary-950 transition-colors duration-300"
  >
    <div id="page-wrapper" class="page-transition-wrapper">
      <slot />
    </div>
    <script>
      // Check for user preference
      if (localStorage.getItem("darkMode") === null) {
        // Check system preference
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          localStorage.setItem("darkMode", "true");
          document.documentElement.classList.add("dark");
        } else {
          localStorage.setItem("darkMode", "false");
        }
      }

      // Handle page transitions
      document.addEventListener("astro:page-load", () => {
        // This runs on initial page load and after each navigation
        const pageWrapper = document.getElementById("page-wrapper");
        if (pageWrapper) {
          pageWrapper.classList.add("page-loaded");
        }
      });

      document.addEventListener("astro:before-swap", () => {
        // This runs before the new page content is swapped in
        const pageWrapper = document.getElementById("page-wrapper");
        if (pageWrapper) {
          pageWrapper.classList.remove("page-loaded");
        }
      });
    </script>
    <script src="../scripts/transitions.js"></script>
  </body>
</html>
